import tkinter as tk
from tkinter import scrolledtext
import time
import random

def boot_animation():
    boot_messages = [
        "Initializing system...",
        "Loading kernel modules...",
        "Connecting to secure server...",
        "Decrypting classified data...",
        "Accessing restricted files...",
        "Running security protocols...",
        "No intrusions detected.",
        "System ready. Awaiting command...",
    ]
    for msg in boot_messages:
        terminal.config(state=tk.NORMAL)
        terminal.insert(tk.END, f"{msg}\n", "boot")
        terminal.config(state=tk.DISABLED)
        terminal.see(tk.END)
        root.update()
        time.sleep(random.uniform(0.2, 0.5))
    terminal.config(state=tk.NORMAL)
    terminal.insert(tk.END, "\n", "output")
    terminal.config(state=tk.DISABLED)

def simulate_command():
    command = entry.get()
    if command.strip():
        terminal.config(state=tk.NORMAL)
        terminal.insert(tk.END, f"> {command}\n", "command")
        terminal.config(state=tk.DISABLED)
        entry.delete(0, tk.END)
        
        terminal.config(state=tk.NORMAL)
        terminal.insert(tk.END, "Processing...\n", "output")
        terminal.config(state=tk.DISABLED)
        terminal.see(tk.END)
        root.update()
        time.sleep(random.uniform(0.3, 1.2))
        
        responses = [
            "Access granted. Welcome, Agent.",
            "System breach detected! Countermeasures engaged.",
            "Connecting to cyber server... Success!",
            "Decrypting mission files... Done.",
            "Scanning for vulnerabilities... Critical threat neutralized.",
        ]
        response = random.choice(responses)
        terminal.config(state=tk.NORMAL)
        terminal.insert(tk.END, f"{response}\n\n", "output")
        terminal.config(state=tk.DISABLED)
        terminal.see(tk.END)

# Fenêtre principale
root = tk.Tk()
root.title("Hacker Terminal")
root.configure(bg="black")
root.geometry("900x550")
root.resizable(True, True)

# Zone de texte défilante pour afficher le terminal
terminal = scrolledtext.ScrolledText(root, wrap=tk.WORD, bg="black", fg="green", 
                                     insertbackground="green", font=("Courier New", 14, "bold"),
                                     borderwidth=2, relief=tk.SUNKEN, state=tk.DISABLED)
terminal.tag_config("boot", foreground="lightgreen", font=("Courier New", 12))
terminal.tag_config("command", foreground="lime", font=("Courier New", 14, "bold"))
terminal.tag_config("output", foreground="lightgreen", font=("Courier New", 13))
terminal.pack(pady=10, padx=10, fill=tk.BOTH, expand=True)

# Entrée utilisateu
entry_frame = tk.Frame(root, bg="black")
entry_frame.pack(pady=5, padx=10, fill=tk.X)

entry = tk.Entry(entry_frame, bg="black", fg="green", insertbackground="green", 
                 font=("Courier New", 14, "bold"), borderwidth=2, relief=tk.SUNKEN)
entry.pack(side=tk.LEFT, fill=tk.X, expand=True, padx=5, pady=5)
entry.bind("<Return>", lambda event: simulate_command())

# Bouton d'envoi
send_button = tk.Button(entry_frame, text="Execute", command=simulate_command, bg="black", fg="green", 
                        font=("Courier New", 12, "bold"), borderwidth=2, relief=tk.RAISED, activebackground="darkgreen")
send_button.pack(side=tk.RIGHT, padx=5, pady=5)

# Rendre la fenêtre responsive
root.grid_rowconfigure(0, weight=1)
root.grid_columnconfigure(0, weight=1)
terminal.pack(fill=tk.BOTH, expand=True)
entry_frame.pack(fill=tk.X)

# Effet de démarrage
entry.focus()
root.after(500, boot_animation)
root.mainloop()
